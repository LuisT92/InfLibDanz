---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import ScrollToTop from '../components/ScrollToTop.astro';
import DarkModeToggle from '../components/DarkModeToggle.astro';
import { planEdadAB, planEdadCD } from '../data/planes.js';

// Planes importados desde archivo separado
// planEdadAB: 3 a 5 AÃ±os - "PequeÃ±os Exploradores"
// planEdadCD: 6 a 8 AÃ±os - "Aprendices de la TÃ©cnica" // Usa la misma estructura pero se puede personalizar
---

<Layout title="Mi PequeÃ±o Mundo - Plan de Trabajo">
  <Header />
  
  <main class="work-plan-page">
    <section class="hero-section">
      <div class="container">
        <h1>Mi PequeÃ±o Mundo</h1>
        <p class="subtitle">Plan de Trabajo - 10 Meses de Desarrollo</p>
        <p class="hero-description">Planes adaptados por grupos de edad para un desarrollo Ã³ptimo</p>
    </section>

    <section class="timeline-section">
      <div class="container">
        <div class="age-columns">
          <div class="age-column">
            <div class="age-header">
              <h2>Edad A-B: 3 a 5 AÃ±os</h2>
              <p>"PequeÃ±os Exploradores"</p>
            </div>
            
            <div class="timeline">
              {planEdadAB.map((mes) => (
            <div class="month-block">
              <div class="month-header">
                <div class="month-number">Mes {mes.mes}</div>
                <div class="month-info">
                  <h2>{mes.nombre}</h2>
                  <p>{mes.descripcion}</p>
                </div>
                <button class="expand-btn"><span class="arrow">â–¼</span></button>
              </div>
              
              <div class="weeks-container">
                {mes.semanas.map((semana) => (
                  <div class="week-card">
                    <div class="week-header">
                      <h3>
                        <span class="week-number">Semana {semana.numero}</span>
                        <span class="week-title">{semana.titulo}</span>
                      </h3>
                      <button class="toggle-btn"><span class="plus">+</span></button>
                    </div>
                    
                    <div class="week-content">
                      <div class="week-section">
                        <h4>ðŸ“‹ Objetivos</h4>
                        <ul>
                          {semana.objetivos.map((obj) => <li>{obj}</li>)}
                        </ul>
                      </div>
                      
                      <div class="week-section">
                        <h4>ðŸŽ¯ Actividades</h4>
                        <ul>
                          {semana.actividades.map((act) => <li>{act}</li>)}
                        </ul>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          ))}
            </div>
          </div>

          <!-- Columna Edad C-D -->
          <div class="age-column">
            <div class="age-header">
              <h2>Edad C-D: 6 a 8 AÃ±os</h2>
              <p>"Aprendices de la TÃ©cnica"</p>
            </div>
            
            <div class="timeline">
              {planEdadCD.map((mes) => (
            <div class="month-block">
              <div class="month-header">
                <div class="month-number">Mes {mes.mes}</div>
                <div class="month-info">
                  <h2>{mes.nombre}</h2>
                  <p>{mes.descripcion}</p>
                </div>
                <button class="expand-btn"><span class="arrow">â–¼</span></button>
              </div>
              
              <div class="weeks-container">
                {mes.semanas.map((semana) => (
                  <div class="week-card">
                    <div class="week-header">
                      <h3>
                        <span class="week-number">Semana {semana.numero}</span>
                        <span class="week-title">{semana.titulo}</span>
                      </h3>
                      <button class="toggle-btn"><span class="plus">+</span></button>
                    </div>
                    
                    <div class="week-content">
                      <div class="week-section">
                        <h4>ðŸ“‹ Objetivos</h4>
                        <ul>
                          {semana.objetivos.map((obj) => <li>{obj}</li>)}
                        </ul>
                      </div>
                      
                      <div class="week-section">
                        <h4>ðŸŽ¯ Actividades</h4>
                        <ul>
                          {semana.actividades.map((act) => <li>{act}</li>)}
                        </ul>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          ))}
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>
  
  <Footer />
  <ScrollToTop />
  <DarkModeToggle />
</Layout>

<style>
  .work-plan-page {
    width: 100%;
    background: #f8f9fa;
  }
  .hero-section {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 4rem 0;
    text-align: center;
  }
  .hero-section h1 {
    font-size: 3rem;
    margin-bottom: 1rem;
  }
  .subtitle {
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
  }
  .hero-description {
    font-size: 1.1rem;
    opacity: 0.9;
    max-width: 700px;
    margin: 0 auto;
  }
  .container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 2rem;
  }
  .timeline-section {
    padding: 3rem 0;
  }
  .age-columns {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
  }
  .age-column {
    background: transparent;
  }
  .age-header {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 2rem;
    border-radius: 15px;
    text-align: center;
    margin-bottom: 2rem;
    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
  }
  .age-header h2 {
    margin: 0 0 0.5rem 0;
    font-size: 2rem;
  }
  .age-header p {
    margin: 0;
    opacity: 0.9;
    font-size: 1rem;
  }
  .timeline {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }
  .month-block {
    background: white;
    border-radius: 15px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  }
  .month-header {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 1.25rem;
    display: flex;
    align-items: center;
    gap: 1rem;
    cursor: pointer;
  }
  .month-number {
    font-size: 2rem;
    font-weight: 700;
    opacity: 0.3;
  }
  .month-info {
    flex: 1;
  }
  .month-info h2 {
    margin: 0 0 0.25rem 0;
    font-size: 1.3rem;
  }
  .month-info p {
    font-size: 0.9rem;
    margin: 0;
  }
  .expand-btn {
    background: rgba(255, 255, 255, 0.2);
    border: none;
    color: white;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    cursor: pointer;
    font-size: 1.5rem;
  }
  .expand-btn .arrow {
    display: inline-block;
    transition: transform 0.3s;
  }
  .month-block.expanded .expand-btn .arrow {
    transform: rotate(180deg);
  }
  .weeks-container {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.5s ease;
  }
  .month-block.expanded .weeks-container {
    max-height: 5000px;
  }
  .week-card {
    border-bottom: 1px solid #e9ecef;
  }
  .week-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem 2rem;
    cursor: pointer;
  }
  .week-header h3 {
    margin: 0;
    display: flex;
    align-items: center;
    gap: 1rem;
  }
  .week-number {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.9rem;
  }
  .week-title {
    color: #333;
  }
  .toggle-btn {
    background: #e9ecef;
    border: none;
    color: #667eea;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    cursor: pointer;
    font-size: 1.5rem;
    transition: transform 0.3s;
  }
  .week-card.expanded .toggle-btn {
    transform: rotate(45deg);
  }
  .week-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.4s ease;
  }
  .week-card.expanded .week-content {
    max-height: 1000px;
  }
  .week-section {
    padding: 1rem 1.5rem;
  }
  .week-section h4 {
    color: #667eea;
    margin-bottom: 0.75rem;
    font-size: 1rem;
  }
  .week-section ul {
    list-style: none;
    padding: 0;
  }
  .week-section li {
    padding: 0.4rem 0 0.4rem 1.5rem;
    position: relative;
    color: #555;
    font-size: 0.9rem;
  }
  .week-section li::before {
    content: "â€¢";
    position: absolute;
    left: 0;
    color: #667eea;
    font-size: 1.2rem;
  }
  
  @media (max-width: 1024px) {
    .age-columns {
      grid-template-columns: 1fr;
      gap: 3rem;
    }
    .container {
      max-width: 900px;
    }
  }
  
  @media (max-width: 768px) {
    .hero-section h1 {
      font-size: 2rem;
    }
    .subtitle {
      font-size: 1.2rem;
    }
    .hero-description {
      font-size: 1rem;
    }
    .month-number {
      font-size: 1.5rem;
    }
    .month-info h2 {
      font-size: 1.1rem;
    }
    .month-header {
      padding: 1rem;
      gap: 0.5rem;
    }
    .expand-btn {
      width: 40px;
      height: 40px;
    }
    .week-header {
      padding: 1rem;
    }
    .week-header h3 {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }
    .week-section {
      padding: 1rem;
    }
    .age-header h2 {
      font-size: 1.5rem;
    }
    .age-header {
      padding: 1.5rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const monthHeaders = document.querySelectorAll('.month-header');
    monthHeaders.forEach(header => {
      header.addEventListener('click', () => {
        header.parentElement?.classList.toggle('expanded');
      });
    });

    const weekHeaders = document.querySelectorAll('.week-header');
    weekHeaders.forEach(header => {
      header.addEventListener('click', () => {
        header.parentElement?.classList.toggle('expanded');
      });
    });
  });
</script>
